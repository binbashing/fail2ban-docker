name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.config.dockerfile }}
          push: false
          tags: |
            binbashing/fail2ban:latest
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7, linux/i386
          outputs: type=docker,artifacts=1
        
      - name: Check is image has changed
        id: check_image
        run: |
          docker pull binbashing/fail2ban:latest
          PULLED_IMAGE_DIGEST=$(docker inspect --format='{{.RepoDigests}}' binbashing/fail2ban:latest)
          BUILT_IMAGE_DIGEST=$(docker inspect --format='{{.RepoDigests}}' binbashing/fail2ban:${{ github.sha }})
          if [ "$PULLED_IMAGE_DIGEST" = "$BUILT_IMAGE_DIGEST" ]; then
            echo "Image has not change."
            echo "::set-output name=match::true"
          else
            echo "Image has changed."
            echo "::set-output name=match::false"
          fi

      - name: Build and push Docker image
        if: steps.check_image.outputs.match == 'false'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: binbashing/fail2ban:latest
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7, linux/i386